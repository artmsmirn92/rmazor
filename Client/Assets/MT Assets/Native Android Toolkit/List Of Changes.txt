
/////////////////////
	  MT ASSETS
	  CHANGELOG
/////////////////////

v2.6.5
	- Correction of small bugs.

v2.6.4
	- Improvements have been made to Webview. Webview should now run a little faster on less powerful devices.
	  In addition, Webview now supports sounds played by JavaScript from pages.
	- Now when Webview is running in full screen, it is possible to play YouTube videos and so on, using the
	 hardware acceleration of the device.
	- More improvements will come soon.

v2.6.3
	- A bug has been fixed that caused the automatic deactivation of some scripts' Gizmos to stop working.

v2.6.2
	- Fixed a bug in the functioning of functions that involved bluetooth, in some devices.
	- Some extra (and optional) permissions have been added to ensure that some methods that involve bluetooth,
	  work as expected.
	- Fixed a bug that caused saving preferences to cause some build errors, sometimes.
	- Fixed a bug that caused the "NAT Data Handler" preferences button not to work.

v2.6.1
	- The data bridge component now has an icon!
	- The documentation has been updated to ensure greater clarity, volume of information, tips and minor corrections!
	- Fixed a bug that caused compilation errors when importing the asset. Now NAT has a mecanism that prevents
	  conflict errors with DLLs included in the package of this asset.
	- Scheduled notifications have improved their native code, focusing on greater accuracy in deliveries.
	- The "ConfigOnChangeTimeNotification()" method is now obsolete and does nothing else. You can now enable
	  or disable the Date/Time change notification through the Native Android Toolkit preferences window.
	- Native Android Toolkit now has a system to force the Android system to deliver your notifications as
	  close as possible to the time at which you wanted them to be delivered, even if the Android device
	  has battery saving settings.
	- 10 more channels of scheduled notifications have been added to the Native Android Toolkit. NAT now
	  has a total of 20 notification channels, which means that you can schedule up to 20 notifications to be delivered.
	- Some more settings have been added for the preferences window.
	- Native Android Toolkit can now detect whether NAT Core.aar has been modified externally or updated,
	  thus automatically applying your preferences.

v2.5.2
	- Following the rhythm of Unity Engine versions and to guarantee the good permanent support of this asset,
	  now the minimum recommended version is 2018.1, however, you can still use this asset in the 2017.4 LTS
	  version if you prefer. This will allow this asset to always have the latest features and better and
	  more effective support!

v2.5.1
	- Fixed an issue that generated conflicts when loading a scene that already had a data receiver.

v2.5.0
	- All resources, persistent asset data and other files are now saved in "MT Assets/_AssetsData".
	  This makes it easy to manage all files generated by MT assets and if you need to remove any asset,
	  just delete the asset folder. So, even if you want to remove some MT assets from your project, or
	  update it, you will not lose any files or information that you would like to keep!

v2.4.3
	- Fixed a bug that caused the method to check if a phone was connected, not working on Android 5.
	- Fixed a bug that caused the compilation or loading time of the scene execution to increase considerably
	  in the editor.

v2.4.2
	- It is now possible to hide the Webview control bar and toolbar in dialog and fullscreen.
	- Updated documentation.

v2.4.1
	- Fixed a bug in the Webview forward and back buttons in the dialog.
	- Now it is possible to open Webview in full screen, in a new activity. However, when opening in full
	  screen, Unity's activity will be closed, that is, your application that runs on Unity will be closed and
	  a new window will open with Webview in full screen. When the user closes Webview, it will return to the
	  original activity of Unity, returning to your app automatically.
	- If an error occurs while saving preferences, NAT will stop saving, to avoid corrupting the AAR file,
	  so you do not need to re-install the asset if an error occurs.
	- The documentation has been updated.

v2.3.0
	- In this update the monitoring functions have been improved!
	- Now you can check to see if a wired headset is connected or if a wireless headset is connected.
	  Both methods are functional.
	- Documentation updated!

v2.2.1
	- This is an update/patch that fixes some bugs and brings improvements.
	- Fixed a bug that generated several errors saving preferences in Unity 2019 or later versions.
	- Fixed some errors in the documentation.
	- Now, besides getting the time unit of a Calendar object in INT format, you can also get this unit
	  formatted in a STRING, so if the unit (such as time) is less than 10, it will have a leading zero,
	  to make everything easier!
	- You can now enable or disable other permissions such as Internet, Access Network State, Bluetooth, and so on.
	- You can also change the NAT API level through preferences.
	- Now the documentation includes the permission each Native Android Toolkit method requires!

v2.1.1
	- This is a major update for the Native Android Toolkit. From the time this version is available, previous
	  versions of NAT are obsolete. Several changes to the API and native side of NAT have been made, and
	  if you already use Native Android Toolkit, you will most likely have to change some NAT code that is
	  in your application, so if you choose to upgrade, do a back up your project, and be aware that you may
	  need to make changes to your code, as several API methods/classes have been renamed and some have even been
	  removed for obsolete use. Don't worry, 95% of Native Android Toolkit's functions are still there, just
	  changed their names and were redone from scratch.
	- Fixed a bug when importing this asset for the first time, where a file error message was displayed.
	  It was more common with Windows 10 users.
	- Native Android Toolkit installation system improvements.
	- Native Android Toolkit now has a new DataHandler installer to make life easier in the editor.
	- You can now change Native Android Toolkit settings, such as disabling asset log posting.
	- Native source code improvements.
	- The script "MTAssetsDataHandlerNAT" has been removed from Native Android Toolkit and is no longer
	  supported. This script was responsible for the communication between your game and the native
	  Android code. There is now a new script responsible for this work. The new script responsible for
	  this service is "NativeAndroidDataHandler". If you have the old script in your project, just delete it.
	- Added a method to get the current time and date over the internet (NTP).
	- ProgressDialog and SpinnerDialog are now obsolete. This happened because in the latest versions
	  of Android, these methods are also obsolete as they prevent the user from interacting with the app,
	  because of this, the best way to display a progress bar is by creating it within your app.
	- Several bug fixes and code improvements.
	- You can now request permissions separately, so you have better control of which permissions
	  you will or will not request in your game.
	- It is no longer possible to check if the system has been rebooted. Due to the malfunction
	  of this solution, it is now obsolete. Native Android Toolkit itself will check to see if the system
	  has been rebooted, so if you use a system of time that passes while the game is closed,
	  rest assured, Native Android Toolkit will take care of everything for you.
	- There was a slight change in the asset API. Now, to access the API methods of this asset,
	  use "using MTAssets.NativeAndroidToolkit".
	- The "TimeRepresentation" class has been removed from the asset and is deprecated. Now the "Calendar"
	  class has taken its place. This class is much more complete and besides storing a period of time, it
	  also makes calculations of sum and subtraction of time, conversions and so on. It is now much easier
	  to manage and manipulate the times returned by Native Android Toolkit and etc.
	- Calendar also supports Direct Debug, so you can better debug your logic.
	  For example: Debug.Log(new Calendar(2018, 11, 08, 21, 19, 15));
	- Now the API to check if the Date/Time was changed while the game was closed has been removed.
	  From now on, Native Android Toolkit will manage this for you, and you can get this information every
	  time the game is restored (after being minimized) or right at the beginning of the game (you can call
	  a method that will let you know if it happened). a time change while the game was closed). See the
	  updated documentation for full details.
	- The old API for knowing how much time passed while the app was closed is now obsolete.
	  The new API ("NativeAndroid.Time.GetElapsedTimeLastCloseUntilThisRun()") is more powerful and can
	  tell you how long the app has been closed, as well as whether the device date or time has been changed
	  manually. This is great for avoiding cheating!
	- Added a new event that allows you to execute custom logic whenever the application is resumed
	  (restored) after a pause (minimized). The event will let you know how long the app has been paused,
	  and if the device's date/time has changed while it has been paused. With this event you can calculate
	  the time elapsed while the game was closed, and keep counting the time of your builds (for example)
	  even while the game is paused! Also, you can know if the date/time have been changed to avoid cheating!
	  This API will also tell you how long the device has been locked.
	- Now, with the two APIs above, you have a complete solution to monitor time while the game has been
	  closed or minimized. If you use these APIs along with the "Calendar" class to manipulate and calculate
	  time, you can create Daily Roulette logics, Daily Chests, Constructs, and more using time logic!
	- WebView's "OnError", "OnClose", and "Close" events are now obsolete because most Android versions
	  are unable to run them. The "OnClose" event continues to function normally.
	- Documentation has been updated with new changes and APIs.
	- Fixed an error that happened to empty events.
	- Notification scheduling methods have been redesigned for better writing and organization.
	- The "isReadable" method has been removed as it was redundant. Every file is readable,
	  but you can still check if the files are editable, hidden and etc, normally.
	- Several methods for verifying file information have been deleted from the API and are now obsolete.
	  In place of these methods, a new class was introduced. The FileRef class. By instantiating this class
	  you can enter the path to the target file and after instantiating this class you can get all the
	  information from the target file (if it exists and is found by FileRef). With this class, your code
	  will be more organized and simple! It is still possible to do everything that was done before with
	  files, but now the code has changed and is more organized and intuitive.
	- The "FileManager" class is now obsolete and the "Files" class has taken its place. This class is
	  simpler and contains only the main methods for creating files and getting information from memory. File
	  management now belongs to the "FileRef" class.
	- The methods for getting the network name and mac address of the device have been removed as the
	  Android system has implemented some changes for user security.
	- Now, through the Native Android Toolkit settings system, you can change your Android Manifest preferences
	  without having to edit the XML file directly. Now NAT can manage everything for you. In addition, you
	  can also change the icon for Native Android Toolkit notifications and etc. If you don't want Native
	  Android Toolkit to take care of your Manifest, just disable it in NAT settings.
	- Improved debug messages.
	- Fixed an issue that caused native dialog box events to run more than 1 times.

v1.3.2
	- Fix an issue that caused Texture2d and Text sharing not to work on Android 8 or higher.
	- Fixed an issue where flash light was not enabled on Android versions higher than 6.0.
	- Fixed an issue where could not open an app in the Play Store from its package name.
	- Demo scene interface improvements.

v1.3.1
	- Minor additions to the asset menu.
	- Improvement of some asset codes.
	- Improvements to undo actions.
	- Minor bug fixes.

v1.2.2
	- Fix a bug with the welcome message.
	- Small housekeeping in scripts
	- Added method to get wifi MAC address
	- Added method to get unique Android device ID
	- Updated Documentation
	- Added a guide to removing permissions you will not use in your project

v1.1.6
	- Now notifications sent while the game is open also receive touch entries.

v1.1.5
	- Improved notification compatibility for all versions of Android.

v1.1.4
	- Expanded support: The tool now offers full support from the Unity 2017.4.1 (LTS) version or higher.
	  Create more, even in old versions!

v1.1.3
	- AndroidManifest.xml merge improvements
	- Improved byte transfer to native Android code.
	- Small corrections.

v1.1.2
	- Webview improvements
	- Minor fixes in code
	- Fixed a bug in getting the time elapsed since the last time the game was closed, in newer versions of the Unity Editor.

v1.1.1
	- Minor improvements in code.

v1.1
	- The minimum support version is now Unity 2018.1.0f2. This change was made to ensure future improvements to the tool! Stay tuned!
	- Small corrections!

v1.0
	- The Native Android Toolkit has just been released! I will always be working to support and add new features!
	  Do you have any suggestions, Bug reports or any problems with using this asset? Contact by email!
	  (mtassets@windsoft.xyz)

/////////////////////
  Email for support
mtassets@windsoft.xyz
/////////////////////